'use strict';

var http = require('http');

var ShortMessage = require('../../models/ShortMessage');
var logger = require('../../lib/logger');

//short message platform provider
var provider = 'CL';
var url, account, password;


var clClient = function(){
	return {
		init: function(conf){
			if(conf.url == null){throw new Error("clClientConfig has no url");}
			if(conf.account == null){throw new Error("clClientConfig has no account");}
			if(conf.password == null){throw new Error("clClientConfig has no password");}
			url = conf.url;
			account = conf.account;
			password = conf.password;
			logger.info("clClient initialized: ",url);
			logger.info("clClient account: ",account);
		},

		send: function (shortMessage, callback){
			logger.info("clClient start to send: ",shortMessage);

			//url we want
			var options = url
				+'?account='+account
				+'&pswd='+password
				+'&msg='+encodeURIComponent(shortMessage.content)
				+'&mobile='+shortMessage.mobile
				+'&needstatus=true';

			//now we start to send
			var req = http.get(options, function(res) {
			logger.info('STATUS: ', res.statusCode);
				if(res.statusCode != 200){
					callback("HTTP status code: "+res.statusCode);
					return;
				}
				logger.info('HEADERS: ', res.headers);
				res.setEncoding('utf8');
				res.on('data', function (chunk) {
					logger.info('BODY: ', chunk);
					var lines = chunk.split('\n');
					var tokens = lines[0].split(',');
					logger.info('time: ',tokens[0]);
					logger.info('code: ',tokens[1]);
					logger.info('msgId: ',lines[1]);
					shortMessage.msgId = lines[1];
					shortMessage.remark = tokens[0];
					shortMessage.provider = "CL";
					if(tokens[1] != '0'){
						shortMessage.status = "2";
						callback("clClient failed with code "+tokens[1]);
					}else{
						shortMessage.status = "1";
						callback(null);
					}
				});
			});

			req.end();
		}
	};
	
};

module.exports = clClient();
